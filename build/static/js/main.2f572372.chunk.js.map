{"version":3,"sources":["serviceWorker.js","components/Header/Header.jsx","components/Navbar/NavbarContainer.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","redux/profile-reducer.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","redux/dialogs-reducer.js","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","redux/users-reducer.js","components/Users/Users.jsx","components/Users/UsersContainer.jsx","App.js","redux/sidebar-reducer.js","redux/navbar-reducer.js","redux/redux-store.js","index.js"],"names":["Boolean","window","location","hostname","match","Header","className","src","alt","NavbarContainer","connect","state","navList","navbar","props","navbarItem","map","l","to","rout","activeClassName","name","ProfileInfo","initialState","posts","id","postText","likesCount","newPostText","profileReducer","action","type","newPost","newText","Post","message","likeCount","MyPosts","postsElemetns","p","newPostElement","React","createRef","onChange","text","current","value","updateNewPostText","ref","onClick","addPost","MyPostsContainer","profilePage","dispatch","updateNewPostTextCreator","Profile","News","Music","Settings","dialogs","messages","newMessageBody","dialogsReducer","body","Message","textMessage","DialogItem","path","Dialogs","dialogsPage","dialogsElements","d","key","messagesElements","m","e","target","updateNewMessageBody","rows","placeholder","sendMessage","DialogsContainer","updateNewMessageBodyCreator","users","usersReducer","u","userId","followed","UsersContainer","length","setUsers","fullName","status","city","country","userIcon","unfollow","follow","usersPage","followAC","unfollowAC","setUsersAC","Users","App","store","render","sidebarReducer","navbarReducer","reducers","combineReducers","sidebar","createStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2f572372.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport style from \"./Header.css\";\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"appHeader\">\r\n            <img\r\n                src=\"https://www.designfreelogoonline.com/wp-content/uploads/2016/03/00106-3D-company-logo-design-free-logo-online-Template-03.png\"\r\n                alt=\"site logo\"/>\r\n            <span>Header</span>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport \"./Navbar.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Navbar = (props) => {\r\n    let navbarItem = props.navList.map(l => {\r\n        return (\r\n            <li className=\"navList_item\">\r\n                <NavLink to={l.rout} activeClassName=\"active\">{l.name}</NavLink>\r\n            </li>\r\n        )\r\n    })\r\n    return (\r\n        <nav className=\"sidebar\">\r\n            <ul className=\"navList\">\r\n                {navbarItem}\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        navList: state.navbar.navList,\r\n    }\r\n};\r\n\r\nconst NavbarContainer = connect(mapStateToProps)(Navbar);\r\n\r\nexport default NavbarContainer;","import React from 'react';\r\nimport './ProfileInfo.css'\r\n\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src=\"https://picsum.photos/id/507/1700/400\" alt=\"\"/>\r\n            </div>\r\n            <div className=\"userInfo\">\r\n                <img src=\"https://picsum.photos/id/447/100/100\" alt=\"\"/>\r\n                <div>Description</div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","const ADD_POST = \"ADD-POST\";\r\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, postText: \"first props\", likesCount: 10},\r\n        {id: 2, postText: \"First message\", likesCount: 13},\r\n        {id: 3, postText: \"Hello\", likesCount: 2},\r\n        {id: 2, postText: \"Second message\", likesCount: 0},\r\n    ],\r\n    newPostText: '',\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                postText: state.newPostText,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: \"\",\r\n            }\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostCreator = () => ({type: ADD_POST});\r\nexport const updateNewPostTextCreator = (text) => ({type: UPDATE_NEW_POST_TEXT, newText: text,});\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport './Post.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className=\"item\">\r\n            <img className=\"userAva\" src=\"https://picsum.photos/id/509/200/200\" alt=\"user photo\"/>\r\n            <p>\r\n                {props.message}\r\n            </p>\r\n            <span className=\"likeCount\">\r\n               Likes {props.likeCount}\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport './MyPosts.css';\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElemetns = props.posts.map( p => <Post message={p.postText} likeCount={p.likesCount}/>);\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = () => {\r\n        props.addPost()\r\n    };\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text)\r\n    };\r\n\r\n    return (\r\n        <div className=\"posts\">\r\n            <h3>My posts</h3>\r\n            <div className=\"addPost\">\r\n                <div>\r\n                    <textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText} />\r\n                </div>\r\n                <div>\r\n                    <button onClick={onAddPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"postsList\">\r\n                {postsElemetns}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostCreator, updateNewPostTextCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch( addPostCreator() )\r\n        },\r\n        updateNewPostText: (text) => {\r\n            dispatch( updateNewPostTextCreator(text) )\r\n        },\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect( mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport './Profile.css'\r\n// import MyPosts from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n          <ProfileInfo/>\r\n          <MyPostsContainer\r\n              // store={props.store}\r\n              // posts={props.profilePage.posts}\r\n              // newPostText={props.profilePage.newPostText}\r\n              // dispatch={props.dispatch}\r\n          />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport \"./News.css\";\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n\r\n\r\n            <div className=\"box\">\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;","import React from \"react\";\r\nimport style from \"./Music.module.css\";\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport style from \"./Settings.module.css\";\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","const UPDATE_NEW_MESSAGE_BODY = \"UPDATE-NEW-MESSAGE-BODY\";\r\nconst SEND_MESSAGE = \"SEND-MESSAGE\";\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: \"Slavon\"},\r\n        {id: 2, name: \"Alex\"},\r\n        {id: 3, name: \"Gena\"},\r\n        {id: 4, name: \"Nikitos\"},\r\n        {id: 5, name: \"Yrko\"},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit.\"},\r\n        {id: 2, message: \"Esse laborum laudantium maxime quos vel.\"},\r\n        {\r\n            id: 3,\r\n            message: \"Accusantium, assumenda cupiditate dolores exercitationem mollitia necessitatibus nobis perferendis quaerat quis reprehenderit rerum, sint vitae voluptatum. \"\r\n        },\r\n        {id: 4, message: \"Esse laborum laudantium maxime quos vel.\"},\r\n        {id: 5, message: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit.\"},\r\n    ],\r\n    newMessageBody: \"\",\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_BODY: {\r\n            return {\r\n                ...state,\r\n                newMessageBody: action.body\r\n            };\r\n        }\r\n        case SEND_MESSAGE: {\r\n            let body = state.newMessageBody;\r\n            return  {\r\n                ...state,\r\n                newMessageBody: '',\r\n                messages: [...state.messages, {id: 6, message: body }]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = () => ({type: SEND_MESSAGE});\r\nexport const updateNewMessageBodyCreator = (body) => ({type: UPDATE_NEW_MESSAGE_BODY, body: body,});\r\n\r\nexport default dialogsReducer;","import React from \"react\";\r\nimport \"../Dialogs.css\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className=\"message\">\r\n            <span className=\"userAva\">\r\n                <img src=\"https://picsum.photos/id/536/200/200\" alt=\"\"/>\r\n            </span>\r\n            <span className=\"messageItem\">\r\n                {props.textMessage}\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport \"../Dialogs.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id\r\n    return (\r\n        <div className=\"dialog\">\r\n            <span>\r\n                <img src=\"https://picsum.photos/id/577/200/200\" alt=\"\"/>\r\n            </span>\r\n            <NavLink to={path} activeClassName=\"active\">{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport \"./Dialogs.css\";\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message textMessage={m.message} id={m.id} key={m.id}/>);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let onSendMessageClick = () => {\r\n        props.sendMessage()\r\n    };\r\n\r\n    let  onNewMessageChange = (e) => {\r\n        let body = e.target.value;\r\n        props.updateNewMessageBody(body)\r\n    };\r\n\r\n    return (\r\n        <div className=\"dialogs\">\r\n            <div className=\"dialogsItems\">\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className=\"messages\">\r\n                <div>\r\n                    {messagesElements}\r\n                </div>\r\n                <div className=\"sendMessage\">\r\n                    <div>\r\n                        <textarea onChange={onNewMessageChange}\r\n                              value={newMessageBody} rows=\"8\" placeholder=\"Enter your message\">\r\n                        </textarea>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={onSendMessageClick}>Send message</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: () => {\r\n            dispatch(sendMessageCreator())\r\n        },\r\n        updateNewMessageBody: (body) =>{\r\n            dispatch(updateNewMessageBodyCreator(body))\r\n        }\r\n    }\r\n};\r\n\r\nconst DialogsContainer = connect(mapStateToProps,mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;","const FOLLOW = \"FOLLOW\";\r\nconst UN_FOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET-USERS\";\r\n\r\nlet initialState = {\r\n    users: [\r\n        // {id: 1, followed: true, fullName: 'Alex', status: 'Front And', location: {city:'Kharkiv', country: 'Ukraine'}, userIcon: 'https://picsum.photos/60/60'},\r\n        // {id: 2, followed: false, fullName: 'Chernov', status: 'Full Stack', location: {city:'Kuiv', country: 'Ukraine'}, userIcon: 'https://picsum.photos/60/60'},\r\n        // {id: 3, followed: true, fullName: 'Lera', status: 'Sells', location: {city:'Symu', country: 'Ukraine'}, userIcon: 'https://picsum.photos/60/60'},\r\n        // {id: 4, followed: true, fullName: 'Slavon', status: 'Front And', location: {city:'Krakov', country: 'Poland'}, userIcon: 'https://picsum.photos/60/60'},\r\n        // {id: 5, followed: false, fullName: 'Dima', status: 'React samurai', location: {city:'Minsk', country: 'Belarus'}, userIcon: 'https://picsum.photos/60/60'}\r\n    ]\r\n}\r\n\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        case UN_FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...state.users, ...action.users]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followAC = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowAC = (userId) => ({type: UN_FOLLOW, userId});\r\nexport const setUsersAC = (users) => ({type: SET_USERS, users});\r\n\r\nexport default usersReducer;","import React from \"react\";\r\nimport './Users.css'\r\n\r\nconst UsersContainer = (props) => {\r\n\r\n\r\n    if (props.users.length === 0) {\r\n\r\n        // axios.get(\"\")\r\n\r\n        props.setUsers(\r\n            [\r\n                {id: 1, followed: true, fullName: 'Alex', status: 'Front And', location: {city:'Kharkiv', country: 'Ukraine'}, userIcon: 'https://picsum.photos/60/60'},\r\n                {id: 2, followed: false, fullName: 'Chernov', status: 'Full Stack', location: {city:'Kuiv', country: 'Ukraine'}, userIcon: 'https://picsum.photos/60/60'},\r\n                {id: 3, followed: true, fullName: 'Lera', status: 'Sells', location: {city:'Symu', country: 'Ukraine'}, userIcon: 'https://picsum.photos/60/60'},\r\n                {id: 4, followed: true, fullName: 'Slavon', status: 'Front And', location: {city:'Krakov', country: 'Poland'}, userIcon: 'https://picsum.photos/60/60'},\r\n                {id: 5, followed: false, fullName: 'Dima', status: 'React samurai', location: {city:'Minsk', country: 'Belarus'}, userIcon: 'https://picsum.photos/60/60'}\r\n            ]\r\n        )\r\n    }\r\n\r\n\r\n    return  (\r\n        <div>\r\n            {\r\n                props.users.map( u => <div className=\"user-item\" key={u.id}>\r\n                    <span className=\"user-control\">\r\n                        <div className=\"user-icon_wrap\"><img src={u.userIcon} alt={u.userIcon}/></div>\r\n                        <div>\r\n                            { u.followed\r\n                                ? <button onClick={ () => {props.unfollow(u.id)} }>Unfollow</button>\r\n                                : <button onClick={ () => {props.follow(u.id)} }>Follow</button>\r\n                            }\r\n                        </div>\r\n                    </span>\r\n                    <span className=\"user-info\">\r\n                        <span>\r\n                            <div>{u.fullName}</div>\r\n                            <div>{u.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{u.location.country}</div>\r\n                            <div>{u.location.city}</div>\r\n                        </span>\r\n                    </span>\r\n                </div>)\r\n            }\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default UsersContainer;","import React from \"react\";\r\nimport {followAC, setUsersAC, unfollowAC,} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        users: state.usersPage.users,\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId));\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId));\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users));\r\n        }\r\n    }\r\n};\r\n\r\nconst UsersContainer = connect(mapStateToProps,mapDispatchToProps)(Users);\r\n\r\nexport default UsersContainer;","import React from 'react';\r\nimport './App.css';\r\nimport Header from \"./components/Header/Header\";\r\nimport NavbarContainer from \"./components/Navbar/NavbarContainer\";\r\nimport Profile from \"./components/Profile/Profile\";\r\nimport {Route} from \"react-router-dom\";\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\n\r\nconst App = (props) => {\r\n    return (\r\n            <div className=\"appWrapper\">\r\n                <Header/>\r\n                <NavbarContainer store={props.store}/>\r\n                <div className=\"appWrapperContent\">\r\n                    <Route path=\"/profile\" render={ () =>\r\n                        <Profile\r\n                            // store={props.store}\r\n                            // profilePage={props.state.profilePage}\r\n                            //      dispatch={props.dispatch}\r\n                        /> }\r\n                    />\r\n                    <Route /*exact*/ path=\"/dialogs\" render={ () =>\r\n                        <DialogsContainer\r\n                            // store={props.store}\r\n                        />\r\n                    }/>\r\n                    <Route path=\"/users\" render={ () => <UsersContainer/>}/>\r\n                    <Route path=\"/news\" render={ () => <News/>}/>\r\n                    <Route path=\"/music\" render={ () => <Music/>}/>\r\n                    <Route path=\"/settings\" render={ () => <Settings/>}/>\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default App;","let initialState = {\r\n\r\n};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","let initialState = {\r\n    navList: [\r\n        {rout:\"/profile\", name:\"Profile\"},\r\n        {rout:\"/dialogs\", name:\"Messages\"},\r\n        {rout:\"/news\", name:\"News\"},\r\n        {rout:\"/users\", name:\"Users\"},\r\n        {rout:\"/music\", name:\"Music\"},\r\n        {rout:\"/settings\", name:\"Settings\"},\r\n    ]\r\n}\r\n\r\nconst navbarReducer = (state = initialState, action) => {\r\n    return state\r\n}\r\n\r\nexport default navbarReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport navbarReducer from \"./navbar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    navbar: navbarReducer,\r\n    usersPage: usersReducer,\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nwindow.store = store\r\n\r\nexport default store;","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport store from \"./redux/redux-store\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n// let rerenderEntireTree = () => {\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </BrowserRouter>\r\n    , document.getElementById('root'));\r\n\r\n// }\r\n//\r\n// rerenderEntireTree();\r\n\r\n// store.subscribe( () => {\r\n//     rerenderEntireTree()\r\n// } );\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}