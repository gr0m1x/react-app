{"version":3,"sources":["components/Login/Login.jsx","App.js","components/Navbar/NavbarContainer.jsx","components/News/News.jsx","components/Settings/Settings.jsx","hoc/withSuspanse.js","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/common/Pagination/Pagination.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","redux/sidebar-reducer.js","redux/navbar-reducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","api/api.js","serviceWorker.js","index.js","redux/auth-reducer.js","components/common/FormsControl/FormsControl.jsx","utils/validators/validators.js","utils/object-helpers.js","redux/users-reducer.js","components/common/Preloader/Preloader.jsx","redux/dialogs-reducer.js","redux/app-reducer.js","redux/profile-reducer.js"],"names":["LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","className","action","type","placeholder","name","component","Input","validate","required","connect","state","isAuth","auth","login","props","to","value","email","password","rememberMe","ProfileContainer","React","lazy","App","this","initializeApp","store","path","render","withSuspense","Component","AppContainer","compose","withRouter","initialized","app","MainApp","basename","process","evn","PUBLIC_URL","NavbarContainer","navList","navbar","navbarItem","map","l","i","key","rout","activeClassName","News","Settings","fallback","Message","src","alt","textMessage","DialogItem","id","maxLength50","maxLengthCreator","AddMessageFormRedux","Field","rows","Textarea","Dialogs","dialogsPage","dialogsElements","dialogs","d","messagesElements","messages","m","message","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","dispatch","sendMessageCreator","RedirectComponent","Pagination","totalItemsCount","pageSize","currentPage","portionSize","onPageChanged","pagesCount","Math","ceil","pages","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","filter","p","User","user","followingInProgress","unfollow","follow","photos","small","followed","disabled","some","status","Users","totalUserCount","users","getUsers","createSelector","usersPage","u","getPageSize","getCurrentPage","getTotalUserCount","getIsLoading","isLoading","setFollowingInProgress","UsersContainer","pageNumber","requestUsers","Preloader","initialState","sidebarReducer","navbarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsReducer","sidebar","usersReducer","authReducer","appReducer","formReduces","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","applyMiddleware","thunkMiddleware","__store__","Header","userId","logout","HeaderContainer","instance","axios","baseURL","withCredentials","headers","usersAPI","get","then","response","data","followUsers","post","unfollowUsers","delete","profileAPI","getProfile","getStatus","updateStatus","put","authAPI","authMe","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","setAuthUserData","payload","getAuthUserData","a","resultCode","errorMessage","length","stopSubmit","_error","FormControl","meta","touched","children","hasError","input","restProps","maxLength","updateObjectInArray","items","itemId","objPropName","newObjProps","followSuccess","unfollowSuccess","toggleLoader","toggleFollowingInProgress","isFollow","requestPage","count","totalCount","followUnfollowFlow","apiMethod","actionCreator","bind","body","promise","Promise","all","posts","postText","likesCount","profile","addPostCreator","newPostText","setStatus","getUserProfile","getUserStatus","updateUserStatus","newPost"],"mappings":"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","file":"static/js/main.cb155d2f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Login.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControl/FormsControl\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} className={\"form-login\"} action=\"\">\r\n            <label>\r\n                <Field type=\"text\" placeholder=\"Email\" name=\"email\"\r\n                       component={Input}\r\n                       validate={[required]}/>\r\n            </label>\r\n            <label>\r\n                <Field type=\"password\" placeholder=\"Password\" name=\"password\"\r\n                       component={Input}\r\n                       validate={[required]}/>\r\n            </label>\r\n            <label>\r\n                <Field type=\"checkbox\" name=\"rememberMe\"\r\n                       component={Input}\r\n                       validate={[]}/> remember me\r\n            </label>\r\n            {error && <div className=\"error\">{error}</div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: \"login\"\r\n})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (value) => { // получает данные из формы через hoc handleSubmit\r\n        props.login(value.email, value.password, value.rememberMe)\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/profile\"/> // если залогинен редиректид на страницу Профиля\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Login</h2>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth // Проверка Залогиген или нет?\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import React from 'react';\r\nimport './App.css';\r\nimport NavbarContainer from \"./components/Navbar/NavbarContainer\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\r\nimport News from \"./components/News/News\";\r\nimport Login from \"./components/Login/Login\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspanse\";\r\n\r\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n         // if ( !this.props.initialized) {\r\n         //     return ( <Preloader/> );\r\n         // }\r\n\r\n         return (\r\n            <div className=\"appWrapper\">\r\n                <HeaderContainer/>\r\n                <NavbarContainer store={this.props.store}/>\r\n                <div className=\"appWrapperContent\">\r\n                    <Route path=\"/profile/:userId?\" render={ withSuspense(ProfileContainer) }/>\r\n\r\n                    <Route path=\"/dialogs\" render={() =>\r\n                        <DialogsContainer/>}/>\r\n\r\n                    <Route path=\"/users\" render={() =>\r\n                        <UsersContainer/>}/>\r\n\r\n                    <Route path=\"/news\" render={() => <News/>}/>\r\n                    <Route path=\"/login\" render={() => <Login/>}/>\r\n                    <Route path=\"/settings\" render={() => <Settings/>}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized,\r\n});\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps , {initializeApp}),\r\n    // withAuthRedirect\r\n)(App);\r\n\r\nconst MainApp = (props) => {\r\n    return (\r\n        <BrowserRouter basename={process.evn.PUBLIC_URL}>\r\n            <Provider store={store}>\r\n                <AppContainer/>\r\n            </Provider>\r\n        </BrowserRouter>\r\n    )\r\n};\r\n\r\nexport default MainApp;","import React from 'react';\r\nimport \"./Navbar.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Navbar = (props) => {\r\n    let navbarItem = props.navList.map((l, i) => {\r\n\r\n        return (\r\n            <li className=\"navList_item\" key={i}>\r\n                <NavLink to={l.rout} activeClassName=\"active\">{l.name}</NavLink>\r\n            </li>\r\n        )\r\n    })\r\n    return (\r\n        <nav className=\"sidebar\">\r\n            <ul className=\"navList\">\r\n                {navbarItem}\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        navList: state.navbar.navList,\r\n    }\r\n};\r\n\r\nconst NavbarContainer = connect(mapStateToProps)(Navbar);\r\n\r\nexport default NavbarContainer;","import React from \"react\";\r\n// import \"./News.css\";\r\n\r\nconst News = () => {\r\n\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default News;","import React from 'react';\r\n// import style from \"./Setting.css\";\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","import React, {Suspense} from \"react\"\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n\r\n    return (props) => {\r\n        return <Suspense fallback={<Preloader/>}> <Component {...props}/> </Suspense>\r\n    }\r\n};","import React from \"react\";\r\nimport \"../Dialogs.css\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className=\"message\">\r\n            <span className=\"userAva\">\r\n                <img src=\"https://picsum.photos/id/536/200/200\" alt=\"\"/>\r\n            </span>\r\n            <span className=\"messageItem\">\r\n                {props.textMessage}\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport \"../Dialogs.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id\r\n    return (\r\n        <div className=\"dialog\">\r\n            <span>\r\n                <img src=\"https://picsum.photos/id/577/200/200\" alt=\"logo\"/>\r\n            </span>\r\n            <NavLink to={path} activeClassName=\"active\">{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport \"./Dialogs.css\";\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControl/FormsControl\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={\"formMessage sendMessage\"} action=\"\">\r\n            <label>\r\n                <Field rows=\"8\" placeholder=\"Enter your message\" component={Textarea} name={\"newMessageBody\"} validate={[required, maxLength50]}/>\r\n            </label>\r\n            <div>\r\n                <button>Send message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n    form: \"dialogAddMessageForm\"\r\n})(AddMessageForm);\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message textMessage={m.message} id={m.id} key={m.id}/>);\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    };\r\n\r\n    return (\r\n        <div className=\"dialogs\">\r\n            <div className=\"dialogsItems\">\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className=\"messages\">\r\n                <div>\r\n                    {messagesElements}\r\n                </div>\r\n\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Dialogs;","import React from \"react\"\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth : state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n\r\n        render() {\r\n            if( !this.props.isAuth ) return <Redirect to=\"/login\"/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};","// import React from \"react\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => ({\r\n    dialogsPage: state.dialogsPage,\r\n\r\n});\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        },\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect // hoc withAuthRedirect. если не залогинен , ридеректид на страницу Логин\r\n)(Dialogs);","import React, {useState} from \"react\";\r\nimport \"./Pagination.css\";\r\n\r\nconst Pagination = ({totalItemsCount, pageSize, currentPage, portionSize = 8, onPageChanged}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize) ; //вычисляем количество страниц\r\n\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i); // набивает масив страниц\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize );\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className=\"pagination\">\r\n            {portionNumber > 1 && <span>\r\n                <button onClick={() => {setPortionNumber( 1) }}> {\"<<\"} </button>\r\n                <button onClick={() => {setPortionNumber(portionNumber - 1) }}> {\"<\"} </button>\r\n            </span>\r\n\r\n            }\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map( p => {\r\n                return <span className={'pagination_item ' + (currentPage === p ? 'selectedPage' : '')}\r\n                             onClick={ () => { onPageChanged(p) }} key={p}> {p} </span>\r\n            })}\r\n\r\n            { portionCount > portionNumber && <span>\r\n                <button onClick={() => {setPortionNumber(portionNumber + 1) }}> {\">\"} </button>\r\n                <button onClick={() => {setPortionNumber(portionCount) }}> {\">>\"} </button>\r\n            </span>\r\n\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Pagination;","import React from \"react\";\r\nimport \"./User.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div className=\"user-item\">\r\n            <span className=\"user-control\">\r\n                <div className=\"user-icon_wrap\">\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : \"https://picsum.photos/60/60\"}\r\n                             alt={user.photos.small}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      unfollow(user.id)\r\n                                  }}\r\n                        >Unfollow</button>\r\n                        : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      follow(user.id)\r\n                                  }}\r\n                        >Follow</button>\r\n                    }\r\n                </div>\r\n            </span>\r\n            <span className=\"user-info\">\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{\"u.location.country\"}</div>\r\n                    <div>{\"u.location.city\"}</div>\r\n                </span>\r\n            </span>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default User;","import React from \"react\";\r\nimport Pagination from \"../common/Pagination/Pagination\";\r\nimport User from \"./User\";\r\n\r\nconst Users = ({pageSize, totalUserCount, onPageChanged, currentPage, ...props}) => {\r\n    return (\r\n        <div>\r\n            <Pagination onPageChanged={onPageChanged}\r\n                        totalItemsCount={totalUserCount}\r\n                        pageSize={pageSize}\r\n                        currentPage={currentPage}\r\n                        portionSize={8}\r\n            />\r\n            <div className=\"usersList\">\r\n                { props.users.map( user =>\r\n                    <User\r\n                        user={user}\r\n                        key={user.id}\r\n                        followingInProgress={props.followingInProgress}\r\n                        unfollow={props.unfollow}\r\n                        follow={props.follow}/>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n};\r\n\r\nexport const getUsers = createSelector(getUsersSelector,  (users) => {\r\n    return users.filter(u => true);\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n};\r\n\r\nexport const getTotalUserCount = (state) => {\r\n    return state.usersPage.totalUserCount\r\n};\r\n\r\nexport const getIsLoading = (state) => {\r\n    return state.usersPage.isLoading\r\n};\r\n\r\nexport const setFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n};","import React from 'react';\r\nimport {follow, unfollow, requestUsers} from '../../redux/users-reducer';\r\nimport {connect} from 'react-redux';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getIsLoading,\r\n    getPageSize,\r\n    getTotalUserCount,\r\n    getUsers,\r\n    setFollowingInProgress\r\n} from \"../../redux/users-selectors\";\r\n// import {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props; // диструктуризация\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    };\r\n\r\n    render() {\r\n        return  (\r\n            <>\r\n                { this.props.isLoading ? <Preloader/> : null }\r\n                <Users totalUserCount={this.props.totalUserCount}\r\n                       pageSize={this.props.pageSize}\r\n                       currentPage={this.props.currentPage}\r\n                       onPageChanged={this.onPageChanged}\r\n                       users={this.props.users}\r\n                       follow={this.props.follow}\r\n                       unfollow={this.props.unfollow}\r\n                       // isLoading={this.props.isLoading}\r\n                       followingInProgress={this.props.followingInProgress}\r\n                />\r\n            </>\r\n        );\r\n    };\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUserCount: getTotalUserCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isLoading: getIsLoading(state),\r\n        followingInProgress: setFollowingInProgress(state) // делает кнопку \"follow\" \"unfollow\" disabled\r\n    }\r\n};\r\n\r\nexport default compose( // compose выполняет по очереди функции, с низу в верх\r\n    connect(mapStateToProps, {follow, unfollow, requestUsers}),\r\n    // withAuthRedirect // hoc withAuthRedirect. если не залогинен , ридеректид на страницу Логин\r\n)(UsersContainer);","let initialState = {\r\n\r\n};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","let initialState = {\r\n    navList: [\r\n        {rout:\"/profile\", name:\"Profile\"},\r\n        {rout:\"/dialogs\", name:\"Messages\"},\r\n        {rout:\"/news\", name:\"News\"},\r\n        {rout:\"/users\", name:\"Users\"},\r\n        // {rout:\"/login\", name:\"Login\"},\r\n        {rout:\"/settings\", name:\"Settings\"},\r\n    ]\r\n}\r\n\r\nconst navbarReducer = (state = initialState, action) => {\r\n    return state\r\n}\r\n\r\nexport default navbarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport navbarReducer from \"./navbar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport {reducer as formReduces} from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    navbar: navbarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReduces,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n// let store = createStore(reducer , applyMiddleware(thunkMiddleware)); // создает store из reduсer, принимает промежуточный слой applyMiddleware для Thunk\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport \"./Header.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className=\"appHeader\">\r\n            <img\r\n                src=\"https://www.designfreelogoonline.com/wp-content/uploads/2016/03/00106-3D-company-logo-design-free-logo-online-Template-03.png\"\r\n                alt=\"site logo\"/>\r\n            <div className=\"loginBlock\">\r\n                {props.isAuth\r\n                    ? <div>\r\n                        <NavLink to={\"/profile/\" + props.userId}>{props.login}</NavLink>\r\n                        <button onClick={props.logout}>LogOut</button>\r\n                      </div>\r\n                    : <NavLink to=\"/login\">Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n           <Header {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    userId: state.auth.userId,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\" : \"428cc35c-aca7-4b7c-afea-20045660fb17\"\r\n    }\r\n}) ;\r\n\r\nexport const usersAPI = {\r\n    requestUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => { return response.data })\r\n    },\r\n    followUsers(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => { return response.data })\r\n    },\r\n    unfollowUsers(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => { return response.data })\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n            .then(response => { return response.data })\r\n    },\r\n\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status : status})\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => { return response.data })\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n            .then(response => { return response.data })\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n            .then(response => { return response.data })\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport MainApp from './App';\r\n\r\nReactDOM.render(<MainApp/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = \"SET-USER-DATA\";\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isLoading : false,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let data = await authAPI.authMe();\r\n\r\n    if(data.resultCode === 0) {\r\n        let {id, email, login} = data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let data = await authAPI.login(email, password, rememberMe);\r\n\r\n    if(data.resultCode === 0) {\r\n        dispatch(getAuthUserData()); // после Логина вызывает getAuthUserData(), что бы перерисовать компонетну\r\n    } else  {\r\n        let errorMessage = data.messages.length > 0 ? data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error : errorMessage})); // actionCreator stopSubmit от redux form. для формы \"login\"\r\n    }\r\n\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n   let data = await authAPI.logout();\r\n\r\n    if(data.resultCode === 0) {\r\n        // при LogOut зануляем даные о себе\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n};\r\n\r\nexport default authReducer;","import React from \"react\"\r\nimport \"./FormsControl.css\"\r\n\r\nconst FormControl = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <label className={ hasError ? \"error\" : \"\" }>\r\n            {children}\r\n            {hasError ? <span className={\"errorMessage\"}>{error}</span> : null}\r\n        </label>\r\n    )\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}><textarea {...input} {...restProps}/> </FormControl>\r\n    )\r\n};\r\n\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n    )\r\n};\r\n","export const required = (value) => {\r\n    if (value) {\r\n        return undefined;\r\n    }\r\n    return \"Field is required\"\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) {\r\n        return `Max length is ${maxLength} symbols`;\r\n    }\r\n    return undefined;\r\n};\r\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n};","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UN_FOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET-USERS\";\r\nconst SET_CURRENT_PAGE = \"SET-CURRENT-PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \" SET-TOTAL-USERS-COUNT\";\r\nconst TOGGLE_IS_LOADING = \"TOGGLE-IS-LOADING\";\r\nconst TOGGLE_FOLLOWING_PROGRESS = \"TOGGLE-FOLLOWING-PROGRESS\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUserCount: 0,\r\n    currentPage: 1,\r\n    isLoading: false,\r\n    followingInProgress: [],\r\n    // isfollowingInProgress: false,\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray( state.users, action.userId, \"id\", {followed: true} )\r\n            };\r\n        case UN_FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray( state.users, action.userId, \"id\", {followed: false} )\r\n            };\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users,\r\n            };\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            };\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUserCount: action.count\r\n            };\r\n        case TOGGLE_IS_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            };\r\n        case TOGGLE_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFollow\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UN_FOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (count) => ({type: SET_TOTAL_USERS_COUNT, count});\r\nexport const toggleLoader = (isLoading) => ({type: TOGGLE_IS_LOADING, isLoading});\r\nexport const toggleFollowingInProgress = (isFollow , userId) => ({type: TOGGLE_FOLLOWING_PROGRESS, isFollow , userId});\r\n\r\n\r\nexport const requestUsers = (requestPage, pageSize) => async (dispatch) => {\r\n    dispatch(toggleLoader(true));\r\n\r\n    let data = await usersAPI.requestUsers(requestPage, pageSize); // получаем Users после создания компаненты\r\n    dispatch(toggleLoader(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n    dispatch(setCurrentPage(requestPage));\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n\r\n    let data = await apiMethod(userId)\r\n    if (data.resultCode === 0) { // сервер подтвердил что подписка произошла resultCode == 0\r\n        dispatch(actionCreator(userId)) // вызываем callback follow\r\n    }\r\n    dispatch(toggleFollowingInProgress(false , userId));\r\n};\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.followUsers.bind(usersAPI), followSuccess)\r\n};\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollowUsers.bind(usersAPI), unfollowSuccess)\r\n};\r\n\r\nexport default usersReducer;","import React from 'react';\r\nimport './Preloader.css'\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"loader\"></div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Preloader;","\r\nconst SEND_MESSAGE = \"SEND-MESSAGE\";\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: \"Slavon\"},\r\n        {id: 2, name: \"Alex\"},\r\n        {id: 3, name: \"Gena\"},\r\n        {id: 4, name: \"Nikitos\"},\r\n        {id: 5, name: \"Yrko\"},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit.\"},\r\n        {id: 2, message: \"Esse laborum laudantium maxime quos vel.\"},\r\n        {\r\n            id: 3,\r\n            message: \"Accusantium, assumenda cupiditate dolores exercitationem mollitia necessitatibus nobis perferendis quaerat quis reprehenderit rerum, sint vitae voluptatum. \"\r\n        },\r\n        {id: 4, message: \"Esse laborum laudantium maxime quos vel.\"},\r\n        {id: 5, message: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit.\"},\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            let body = action.newMessageBody;\r\n            return  {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body }]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n\r\nexport default dialogsReducer;","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED-SUCCESS\";\r\n\r\nlet initialState = {\r\n    initialized: null,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\n\r\nexport const initializeApp = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(getAuthUserData()); //диспатчит Thunk, возвращает промисы.\r\n        Promise.all([promise]).then( () => {  // вызываем инициализацию после того как получим getAuthUserData - данные о пользователе\r\n                dispatch(initializedSuccess())\r\n        });\r\n    }\r\n};\r\n\r\nexport default appReducer;","import {profileAPI} from \"../api/api\";\r\n\r\n// Actions\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USER_PROFILE = \"SET-USER-PROFILE\";\r\nconst SET_STATUS = \"SET-STATUS\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, postText: \"first props\", likesCount: 10},\r\n        {id: 2, postText: \"First message\", likesCount: 13},\r\n        {id: 3, postText: \"Hello\", likesCount: 2},\r\n        {id: 2, postText: \"Second message\", likesCount: 0},\r\n    ],\r\n    profile : null,\r\n    status: '',\r\n};\r\n\r\n// Reducer\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                postText: action.newPostText,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// Action Creators\r\nexport const addPostCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\n\r\n// side effects, only as applicable\r\n// e.g. thunks, epics, etc\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let data = await profileAPI.getProfile(userId);\r\n    dispatch(setUserProfile(data));\r\n};\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n\r\n    if(response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n};\r\n\r\n\r\nexport default profileReducer;"],"sourceRoot":""}