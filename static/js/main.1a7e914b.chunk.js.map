{"version":3,"sources":["components/Login/Login.jsx","api/api.js","serviceWorker.js","components/Navbar/NavbarContainer.jsx","redux/dialogs-reducer.js","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/News/News.jsx","components/Settings/Settings.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Pagination/Pagination.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/navbar-reducer.js","redux/redux-store.js","App.js","hoc/withSuspanse.js","index.js","redux/auth-reducer.js","components/common/Preloader/Preloader.jsx","components/common/FormsControl/FormsControl.jsx","utils/validators/validators.js","redux/profile-reducer.js"],"names":["LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","className","action","type","placeholder","name","component","Input","validate","required","connect","state","isAuth","auth","login","props","to","value","email","password","rememberMe","instance","axios","baseURL","withCredentials","headers","usersAPI","requestUsers","currentPage","pageSize","get","then","response","data","followUsers","userId","post","unfollowUsers","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","authMe","logout","Boolean","window","location","hostname","match","NavbarContainer","navList","navbar","navbarItem","map","l","i","key","rout","activeClassName","initialState","dialogs","id","messages","message","dialogsReducer","body","newMessageBody","Message","src","alt","textMessage","DialogItem","path","maxLength50","maxLengthCreator","AddMessageFormRedux","Field","rows","Textarea","Dialogs","dialogsPage","dialogsElements","d","messagesElements","m","values","sendMessage","mapStateToPropsForRedirect","compose","dispatch","sendMessageCreator","Component","RedirectComponent","this","React","News","Settings","updateObjectInArray","items","itemId","objPropName","newObjProps","u","users","totalUserCount","isLoading","followingInProgress","followSuccess","unfollowSuccess","toggleLoader","toggleFollowingInProgress","isFollow","followUnfollowFlow","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Pagination","totalItemsCount","portionSize","onPageChanged","pagesCount","Math","ceil","pages","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","p","User","user","unfollow","follow","photos","small","disabled","some","Users","getUsers","createSelector","usersPage","getPageSize","getCurrentPage","getTotalUserCount","getIsLoading","setFollowingInProgress","UsersContainer","pageNumber","Preloader","bind","requestPage","totalCount","Header","HeaderContainer","initialized","appReducer","sidebarReducer","navbarReducer","reducers","combineReducers","profilePage","profileReducer","sidebar","authReducer","app","formReduces","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","ProfileContainer","lazy","App","initializeApp","render","fallback","DialogsContainer","Login","AppContainer","withRouter","promise","getAuthUserData","Promise","all","MainApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","setAuthUserData","payload","errorMessage","length","stopSubmit","_error","FormControl","meta","touched","children","hasError","input","restProps","maxLength","posts","postText","likesCount","profile","addPostCreator","newPostText","setStatus","getUserProfile","getUserStatus","updateUserStatus","newPost"],"mappings":"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","file":"static/js/main.1a7e914b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Login.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControl/FormsControl\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} className={\"form-login\"} action=\"\">\r\n            <label>\r\n                <Field type=\"text\" placeholder=\"Email\" name=\"email\"\r\n                       component={Input}\r\n                       validate={[required]}/>\r\n            </label>\r\n            <label>\r\n                <Field type=\"password\" placeholder=\"Password\" name=\"password\"\r\n                       component={Input}\r\n                       validate={[required]}/>\r\n            </label>\r\n            <label>\r\n                <Field type=\"checkbox\" name=\"rememberMe\"\r\n                       component={Input}\r\n                       validate={[]}/> remember me\r\n            </label>\r\n            {error && <div className=\"error\">{error}</div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: \"login\"\r\n})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (value) => { // получает данные из формы через hoc handleSubmit\r\n        props.login(value.email, value.password, value.rememberMe)\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/profile\"/> // если залогинен редиректид на страницу Профиля\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Login</h2>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth // Проверка Залогиген или нет?\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\" : \"428cc35c-aca7-4b7c-afea-20045660fb17\"\r\n    }\r\n}) ;\r\n\r\nexport const usersAPI = {\r\n    requestUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => { return response.data })\r\n    },\r\n    followUsers(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => { return response.data })\r\n    },\r\n    unfollowUsers(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => { return response.data })\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n            .then(response => { return response.data })\r\n    },\r\n\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status : status})\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => { return response.data })\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n            .then(response => { return response.data })\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n            .then(response => { return response.data })\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport \"./Navbar.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Navbar = (props) => {\r\n    let navbarItem = props.navList.map((l, i) => {\r\n\r\n        return (\r\n            <li className=\"navList_item\" key={i}>\r\n                <NavLink to={l.rout} activeClassName=\"active\">{l.name}</NavLink>\r\n            </li>\r\n        )\r\n    })\r\n    return (\r\n        <nav className=\"sidebar\">\r\n            <ul className=\"navList\">\r\n                {navbarItem}\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        navList: state.navbar.navList,\r\n    }\r\n};\r\n\r\nconst NavbarContainer = connect(mapStateToProps)(Navbar);\r\n\r\nexport default NavbarContainer;","\r\nconst SEND_MESSAGE = \"SEND-MESSAGE\";\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: \"Slavon\"},\r\n        {id: 2, name: \"Alex\"},\r\n        {id: 3, name: \"Gena\"},\r\n        {id: 4, name: \"Nikitos\"},\r\n        {id: 5, name: \"Yrko\"},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit.\"},\r\n        {id: 2, message: \"Esse laborum laudantium maxime quos vel.\"},\r\n        {\r\n            id: 3,\r\n            message: \"Accusantium, assumenda cupiditate dolores exercitationem mollitia necessitatibus nobis perferendis quaerat quis reprehenderit rerum, sint vitae voluptatum. \"\r\n        },\r\n        {id: 4, message: \"Esse laborum laudantium maxime quos vel.\"},\r\n        {id: 5, message: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit.\"},\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            let body = action.newMessageBody;\r\n            return  {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body }]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n\r\nexport default dialogsReducer;","import React from \"react\";\r\nimport \"../Dialogs.css\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className=\"message\">\r\n            <span className=\"userAva\">\r\n                <img src=\"https://picsum.photos/id/536/200/200\" alt=\"\"/>\r\n            </span>\r\n            <span className=\"messageItem\">\r\n                {props.textMessage}\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport \"../Dialogs.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id\r\n    return (\r\n        <div className=\"dialog\">\r\n            <span>\r\n                <img src=\"https://picsum.photos/id/577/200/200\" alt=\"logo\"/>\r\n            </span>\r\n            <NavLink to={path} activeClassName=\"active\">{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport \"./Dialogs.css\";\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControl/FormsControl\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={\"formMessage sendMessage\"} action=\"\">\r\n            <label>\r\n                <Field rows=\"8\" placeholder=\"Enter your message\" component={Textarea} name={\"newMessageBody\"} validate={[required, maxLength50]}/>\r\n            </label>\r\n            <div>\r\n                <button>Send message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n    form: \"dialogAddMessageForm\"\r\n})(AddMessageForm);\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message textMessage={m.message} id={m.id} key={m.id}/>);\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    };\r\n\r\n    return (\r\n        <div className=\"dialogs\">\r\n            <div className=\"dialogsItems\">\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className=\"messages\">\r\n                <div>\r\n                    {messagesElements}\r\n                </div>\r\n\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Dialogs;","import React from \"react\"\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth : state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n\r\n        render() {\r\n            if( !this.props.isAuth ) return <Redirect to=\"/login\"/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};","// import React from \"react\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => ({\r\n    dialogsPage: state.dialogsPage,\r\n\r\n});\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        },\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect // hoc withAuthRedirect. если не залогинен , ридеректид на страницу Логин\r\n)(Dialogs);","import React from \"react\";\r\n// import \"./News.css\";\r\n\r\nconst News = () => {\r\n\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default News;","import React from 'react';\r\n// import style from \"./Setting.css\";\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n};","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UN_FOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET-USERS\";\r\nconst SET_CURRENT_PAGE = \"SET-CURRENT-PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \" SET-TOTAL-USERS-COUNT\";\r\nconst TOGGLE_IS_LOADING = \"TOGGLE-IS-LOADING\";\r\nconst TOGGLE_FOLLOWING_PROGRESS = \"TOGGLE-FOLLOWING-PROGRESS\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUserCount: 0,\r\n    currentPage: 1,\r\n    isLoading: false,\r\n    followingInProgress: [],\r\n    // isfollowingInProgress: false,\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray( state.users, action.userId, \"id\", {followed: true} )\r\n            };\r\n        case UN_FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray( state.users, action.userId, \"id\", {followed: false} )\r\n            };\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users,\r\n            };\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            };\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUserCount: action.count\r\n            };\r\n        case TOGGLE_IS_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            };\r\n        case TOGGLE_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFollow\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UN_FOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (count) => ({type: SET_TOTAL_USERS_COUNT, count});\r\nexport const toggleLoader = (isLoading) => ({type: TOGGLE_IS_LOADING, isLoading});\r\nexport const toggleFollowingInProgress = (isFollow , userId) => ({type: TOGGLE_FOLLOWING_PROGRESS, isFollow , userId});\r\n\r\n\r\nexport const requestUsers = (requestPage, pageSize) => async (dispatch) => {\r\n    dispatch(toggleLoader(true));\r\n\r\n    let data = await usersAPI.requestUsers(requestPage, pageSize); // получаем Users после создания компаненты\r\n    dispatch(toggleLoader(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n    dispatch(setCurrentPage(requestPage));\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n\r\n    let data = await apiMethod(userId)\r\n    if (data.resultCode === 0) { // сервер подтвердил что подписка произошла resultCode == 0\r\n        dispatch(actionCreator(userId)) // вызываем callback follow\r\n    }\r\n    dispatch(toggleFollowingInProgress(false , userId));\r\n};\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.followUsers.bind(usersAPI), followSuccess)\r\n};\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollowUsers.bind(usersAPI), unfollowSuccess)\r\n};\r\n\r\nexport default usersReducer;","import React, {useState} from \"react\";\r\nimport \"./Pagination.css\";\r\n\r\nconst Pagination = ({totalItemsCount, pageSize, currentPage, portionSize = 8, onPageChanged}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize) ; //вычисляем количество страниц\r\n\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i); // набивает масив страниц\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize );\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className=\"pagination\">\r\n            {portionNumber > 1 && <span>\r\n                <button onClick={() => {setPortionNumber( 1) }}> {\"<<\"} </button>\r\n                <button onClick={() => {setPortionNumber(portionNumber - 1) }}> {\"<\"} </button>\r\n            </span>\r\n\r\n            }\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map( p => {\r\n                return <span className={'pagination_item ' + (currentPage === p ? 'selectedPage' : '')}\r\n                             onClick={ () => { onPageChanged(p) }} key={p}> {p} </span>\r\n            })}\r\n\r\n            { portionCount > portionNumber && <span>\r\n                <button onClick={() => {setPortionNumber(portionNumber + 1) }}> {\">\"} </button>\r\n                <button onClick={() => {setPortionNumber(portionCount) }}> {\">>\"} </button>\r\n            </span>\r\n\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Pagination;","import React from \"react\";\r\nimport \"./User.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div className=\"user-item\">\r\n            <span className=\"user-control\">\r\n                <div className=\"user-icon_wrap\">\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : \"https://picsum.photos/60/60\"}\r\n                             alt={user.photos.small}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      unfollow(user.id)\r\n                                  }}\r\n                        >Unfollow</button>\r\n                        : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      follow(user.id)\r\n                                  }}\r\n                        >Follow</button>\r\n                    }\r\n                </div>\r\n            </span>\r\n            <span className=\"user-info\">\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{\"u.location.country\"}</div>\r\n                    <div>{\"u.location.city\"}</div>\r\n                </span>\r\n            </span>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default User;","import React from \"react\";\r\nimport Pagination from \"../common/Pagination/Pagination\";\r\nimport User from \"./User\";\r\n\r\nconst Users = ({pageSize, totalUserCount, onPageChanged, currentPage, ...props}) => {\r\n    return (\r\n        <div>\r\n            <Pagination onPageChanged={onPageChanged}\r\n                        totalItemsCount={totalUserCount}\r\n                        pageSize={pageSize}\r\n                        currentPage={currentPage}\r\n                        portionSize={8}\r\n            />\r\n            <div className=\"usersList\">\r\n                { props.users.map( user =>\r\n                    <User\r\n                        user={user}\r\n                        key={user.id}\r\n                        followingInProgress={props.followingInProgress}\r\n                        unfollow={props.unfollow}\r\n                        follow={props.follow}/>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n};\r\n\r\nexport const getUsers = createSelector(getUsersSelector,  (users) => {\r\n    return users.filter(u => true);\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n};\r\n\r\nexport const getTotalUserCount = (state) => {\r\n    return state.usersPage.totalUserCount\r\n};\r\n\r\nexport const getIsLoading = (state) => {\r\n    return state.usersPage.isLoading\r\n};\r\n\r\nexport const setFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n};","import React from 'react';\r\nimport {follow, unfollow, requestUsers} from '../../redux/users-reducer';\r\nimport {connect} from 'react-redux';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getIsLoading,\r\n    getPageSize,\r\n    getTotalUserCount,\r\n    getUsers,\r\n    setFollowingInProgress\r\n} from \"../../redux/users-selectors\";\r\n// import {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props; // диструктуризация\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    };\r\n\r\n    render() {\r\n        return  (\r\n            <>\r\n                { this.props.isLoading ? <Preloader/> : null }\r\n                <Users totalUserCount={this.props.totalUserCount}\r\n                       pageSize={this.props.pageSize}\r\n                       currentPage={this.props.currentPage}\r\n                       onPageChanged={this.onPageChanged}\r\n                       users={this.props.users}\r\n                       follow={this.props.follow}\r\n                       unfollow={this.props.unfollow}\r\n                       // isLoading={this.props.isLoading}\r\n                       followingInProgress={this.props.followingInProgress}\r\n                />\r\n            </>\r\n        );\r\n    };\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUserCount: getTotalUserCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isLoading: getIsLoading(state),\r\n        followingInProgress: setFollowingInProgress(state) // делает кнопку \"follow\" \"unfollow\" disabled\r\n    }\r\n};\r\n\r\nexport default compose( // compose выполняет по очереди функции, с низу в верх\r\n    connect(mapStateToProps, {follow, unfollow, requestUsers}),\r\n    // withAuthRedirect // hoc withAuthRedirect. если не залогинен , ридеректид на страницу Логин\r\n)(UsersContainer);","import React from 'react';\r\nimport \"./Header.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className=\"appHeader\">\r\n            <img\r\n                src=\"https://www.designfreelogoonline.com/wp-content/uploads/2016/03/00106-3D-company-logo-design-free-logo-online-Template-03.png\"\r\n                alt=\"site logo\"/>\r\n            <div className=\"loginBlock\">\r\n                {props.isAuth\r\n                    ? <div>\r\n                        <NavLink to={\"/profile/\" + props.userId}>{props.login}</NavLink>\r\n                        <button onClick={props.logout}>LogOut</button>\r\n                      </div>\r\n                    : <NavLink to=\"/login\">Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n           <Header {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    userId: state.auth.userId,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED-SUCCESS\";\r\n\r\nlet initialState = {\r\n    initialized: null,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\n\r\nexport const initializeApp = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(getAuthUserData()); //диспатчит Thunk, возвращает промисы.\r\n        Promise.all([promise]).then( () => {  // вызываем инициализацию после того как получим getAuthUserData - данные о пользователе\r\n                dispatch(initializedSuccess())\r\n        });\r\n    }\r\n};\r\n\r\nexport default appReducer;","let initialState = {\r\n\r\n};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","let initialState = {\r\n    navList: [\r\n        {rout:\"/profile\", name:\"Profile\"},\r\n        {rout:\"/dialogs\", name:\"Messages\"},\r\n        {rout:\"/news\", name:\"News\"},\r\n        {rout:\"/users\", name:\"Users\"},\r\n        // {rout:\"/login\", name:\"Login\"},\r\n        {rout:\"/settings\", name:\"Settings\"},\r\n    ]\r\n}\r\n\r\nconst navbarReducer = (state = initialState, action) => {\r\n    return state\r\n}\r\n\r\nexport default navbarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport navbarReducer from \"./navbar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport {reducer as formReduces} from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    navbar: navbarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReduces,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n// let store = createStore(reducer , applyMiddleware(thunkMiddleware)); // создает store из reduсer, принимает промежуточный слой applyMiddleware для Thunk\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport './App.css';\r\nimport NavbarContainer from \"./components/Navbar/NavbarContainer\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\r\nimport News from \"./components/News/News\";\r\nimport Login from \"./components/Login/Login\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspanse\";\r\n\r\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n         if ( !this.props.initialized) {\r\n             return ( <Preloader/> );\r\n         }\r\n\r\n         return (\r\n            <div className=\"appWrapper\">\r\n                <HeaderContainer/>\r\n                <NavbarContainer store={this.props.store}/>\r\n                <div className=\"appWrapperContent\">\r\n                    <Route path=\"/profile/:userId?\" render={ withSuspense(ProfileContainer) }/>\r\n\r\n                    <Route path=\"/dialogs\" render={() =>\r\n                        <DialogsContainer/>}/>\r\n\r\n                    <Route path=\"/users\" render={() =>\r\n                        <UsersContainer/>}/>\r\n\r\n                    <Route path=\"/news\" render={() => <News/>}/>\r\n                    <Route path=\"/login\" render={() => <Login/>}/>\r\n                    <Route path=\"/settings\" render={() => <Settings/>}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized,\r\n});\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps , {initializeApp}),\r\n    // withAuthRedirect\r\n)(App);\r\n\r\nconst MainApp = (props) => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <AppContainer/>\r\n            </Provider>\r\n        </BrowserRouter>\r\n    )\r\n};\r\n\r\nexport default MainApp;","import React, {Suspense} from \"react\"\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n\r\n    return (props) => {\r\n        return <Suspense fallback={<Preloader/>}> <Component {...props}/> </Suspense>\r\n    }\r\n};","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport MainApp from './App';\r\n\r\nReactDOM.render(<MainApp/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = \"SET-USER-DATA\";\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isLoading : false,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let data = await authAPI.authMe();\r\n\r\n    if(data.resultCode === 0) {\r\n        let {id, email, login} = data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let data = await authAPI.login(email, password, rememberMe);\r\n\r\n    if(data.resultCode === 0) {\r\n        dispatch(getAuthUserData()); // после Логина вызывает getAuthUserData(), что бы перерисовать компонетну\r\n    } else  {\r\n        let errorMessage = data.messages.length > 0 ? data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error : errorMessage})); // actionCreator stopSubmit от redux form. для формы \"login\"\r\n    }\r\n\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n   let data = await authAPI.logout();\r\n\r\n    if(data.resultCode === 0) {\r\n        // при LogOut зануляем даные о себе\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n};\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport './Preloader.css'\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"loader\"></div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Preloader;","import React from \"react\"\r\nimport \"./FormsControl.css\"\r\n\r\nconst FormControl = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <label className={ hasError ? \"error\" : \"\" }>\r\n            {children}\r\n            {hasError ? <span className={\"errorMessage\"}>{error}</span> : null}\r\n        </label>\r\n    )\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}><textarea {...input} {...restProps}/> </FormControl>\r\n    )\r\n};\r\n\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n    )\r\n};\r\n","export const required = (value) => {\r\n    if (value) {\r\n        return undefined;\r\n    }\r\n    return \"Field is required\"\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) {\r\n        return `Max length is ${maxLength} symbols`;\r\n    }\r\n    return undefined;\r\n};\r\n","import {profileAPI} from \"../api/api\";\r\n\r\n// Actions\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USER_PROFILE = \"SET-USER-PROFILE\";\r\nconst SET_STATUS = \"SET-STATUS\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, postText: \"first props\", likesCount: 10},\r\n        {id: 2, postText: \"First message\", likesCount: 13},\r\n        {id: 3, postText: \"Hello\", likesCount: 2},\r\n        {id: 2, postText: \"Second message\", likesCount: 0},\r\n    ],\r\n    profile : null,\r\n    status: '',\r\n};\r\n\r\n// Reducer\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                postText: action.newPostText,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// Action Creators\r\nexport const addPostCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\n\r\n// side effects, only as applicable\r\n// e.g. thunks, epics, etc\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let data = await profileAPI.getProfile(userId);\r\n    dispatch(setUserProfile(data));\r\n};\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n\r\n    if(response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n};\r\n\r\n\r\nexport default profileReducer;"],"sourceRoot":""}